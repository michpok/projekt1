"""
projekt_1.py: první projekt do Engeto Online Python Akademie
author: Michal Pokorný
email: my.pokorny@gmail.com
discord: mipok
"""

TEXTS = ['''
Situated about 10 miles west of Kemmerer,
Fossil Butte is a ruggedly impressive
topographic feature that rises sharply
some 1000 feet above Twin Creek Valley
to an elevation of more than 7500 feet
above sea level. The butte is located just
north of US 30N and the Union Pacific Railroad,
which traverse the valley. ''',
'''At the base of Fossil Butte are the bright
red, purple, yellow and gray beds of the Wasatch
Formation. Eroded portions of these horizontal
beds slope gradually upward from the valley floor
and steepen abruptly. Overlying them and extending
to the top of the butte are the much steeper
buff-to-white beds of the Green River Formation,
which are about 300 feet thick.''',
'''The monument contains 8198 acres and protects
a portion of the largest deposit of freshwater fish
fossils in the world. The richest fossil fish deposits
are found in multiple limestone layers, which lie some
100 feet below the top of the butte. The fossils
represent several varieties of perch, as well as
other freshwater genera and herring similar to those
in modern oceans. Other fish such as paddlefish,
garpike and stingray are also present.'''
]

jmeno = ('bob', 'ann', 'mike', 'liz')
heslo = ('123', 'pass123', 'password123', 'pass123')



# prihlasavani, prislusnost jmena s heslem pomoci indexu v tuplu

print('username:')
username = input()
if username in jmeno:
    index_username = jmeno.index(username)
else:
    print('unregistered user, terminating the program..')
    exit()

print('password:')
password = input()
if password in heslo:
    index_password = heslo.index(password)
else:
    print('unregistered user, terminating the program..')
    exit()


if index_username != index_password:
    print('unregistered user, terminating the program..')
    exit()
else:

    print('username:', username, '\n''password:', password)
    print('-' * 40, '\n''Welcome to the app, ', username, '\n'
                                                          'We have 3 texts to be analyzed.')
    print('-' * 40, '\n''Enter a number btw. 1 and 3 to select', '\n', '-' * 40)




#vzber textu

selected_number = input()

number = tuple(range(1,len(TEXTS)+1))
number = str(number)



if selected_number in number:
    print('select number:', selected_number)
    selected_number = int(selected_number)
    selected_number = selected_number - 1
else:
    print('Fail of system (╥﹏╥)')
    exit()



# statistika

text = TEXTS[selected_number].split()

        # pocet slov
print('\n''There are', len(text), 'words in the selected text.')

        


totalNumberTitle = []
totalNumberIsupper = []
totalNumberislower = []
totalNumberIsnumeric  = []
totalNumberSuma = []


for words in text:
    word=words

    # velka pocatecni pismeno
    # pri pouziti poze funkce isttitle to secte 12 slov tak jak je ve vzorovem vysledku
    # podle komentare z 1. odevzdani mam odstranit ze souctu 30N takze je jen 11 slov

    if word.istitle() == True and word.isalnum() != True  :
        totalNumberTitle.append(1)
    if word.istitle() == True and word.isalpha() == True :
        totalNumberTitle.append(1)


        # velka mpismena

    if word.isupper() == True and word.isalpha() == True :
        totalNumberIsupper.append(1)

        # mala pismena
    if word.islower() == True:
        totalNumberislower.append(1)

        # pocet cisle

    if word.isnumeric() == True:
        totalNumberIsnumeric.append(1)

        # suma cisel
    if word.isnumeric() == True:
        totalNumberSuma.append(int(word))


totalNumberTitle = sum(totalNumberTitle)
print('There are', totalNumberTitle, 'titlecase words.')

totalNumberIsupper = sum(totalNumberIsupper)
print('There are', totalNumberIsupper, 'uppercase words.')

totalNumberislower = sum(totalNumberislower)
print('There are', totalNumberislower, 'lowercase words.')

totalNumberIsnumeric = sum(totalNumberIsnumeric)
print('There are', totalNumberIsnumeric, 'numeric strings.')


totalNumberSuma = sum(totalNumberSuma)
print('The sum of all the numbers', totalNumberSuma, '\n')



        # graf:

text = TEXTS[selected_number].split()

        # delka jednotlivych slov

words_list = []

for word in text:
    if word.isalnum() != True:
        word = len(word)
        word = word -1
        words_list.append(word)
    else:
        words_list.append(len(word))

        # soucet delek slov
number_list = []
for number_range in range(20):
    if number_range in words_list:
                number_real = words_list.count(number_range)
                number_list.append(number_real)
    else:
                number_real = 0
                number_list.append(number_real)
        # GARF
graf_position = -1
print('-' * 40, '\n''LEN|  OCCURENCES   |NR.', '\n', '-' * 40)

for graf_lenght in number_list:


    if graf_lenght != 0 and graf_position < 10:
        graf_position = graf_position + 1
        print('', graf_position, '|', 'X' * graf_lenght, ' ' * (15 - graf_lenght), '|', graf_lenght)

    if graf_lenght != 0 and graf_position >= 10:
        graf_position = graf_position + 1
        print(graf_position, '|', 'X' * graf_lenght, ' ' * (15 - graf_lenght), '|', graf_lenght)

    else:
        graf_position = graf_position + 1












